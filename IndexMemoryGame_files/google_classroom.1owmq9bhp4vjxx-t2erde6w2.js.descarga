var GoogleClassroomDisabled=false;var GoogleClassroom=(function(){var m=["https://www.googleapis.com/auth/classroom.courses.readonly","https://www.googleapis.com/auth/classroom.rosters.readonly","https://www.googleapis.com/auth/classroom.coursework.students","https://www.googleapis.com/auth/userinfo.email","https://www.googleapis.com/auth/userinfo.profile"].join(" ");
function f(t,s){return d(t,s,m)}var l=["https://www.googleapis.com/auth/classroom.courses.readonly","https://www.googleapis.com/auth/classroom.coursework.me","https://www.googleapis.com/auth/userinfo.email","https://www.googleapis.com/auth/userinfo.profile"].join(" ");
function e(t,s){return d(t,s,l)}var i=["https://www.googleapis.com/auth/classroom.courses.readonly","https://www.googleapis.com/auth/classroom.rosters.readonly","https://www.googleapis.com/auth/classroom.coursework.students","https://www.googleapis.com/auth/userinfo.email","https://www.googleapis.com/auth/userinfo.profile"].join(" ");
function c(t,s){return d(t,s,i)}function d(t,s,u){return new Promise(function(w,v){q(function(){o(s).then(function(){w(new j(u,t))
},function(x){v(b(x))})},function(){v()})})}function q(s,t){gapi.load("client",{callback:s,onerror:t})
}var k=["https://classroom.googleapis.com/$discovery/rest"];
function o(s){return gapi.client.init({apiKey:s,discoveryDocs:k})
}function g(s){return{errorCode:s,message:s}}function b(s){return{errorCode:s.error,message:s.details}
}function a(t){var s=t.result.error;return{errorCode:s.status,message:s.message,statusCode:s.code,details:s.errors}
}function r(t,s){return t.listItems(t.listItemsOptions).then(function(u){s=(s||[]).concat(t.getListFromResult(u.result)||[]);
if(u.result.nextPageToken){t.listItemsOptions=t.listItemsOptions||{};
t.listItemsOptions.pageToken=u.result.nextPageToken;
return r(t,s)}else{if(t.compare){s.sort(t.compare)}return s
}},function(u){throw a(u)})}function p(s){return r({listItems:gapi.client.classroom.courses.list,listItemsOptions:s,getListFromResult:function(t){return t.courses
},compare:function(t,u){return t.name.localeCompare(u.name)
}})}function n(t,s){return{isSignedIn:true,hasGrantedPermissions:s,userProfile:{id:t.sub,name:{fullName:t.name},emailAddress:t.email,photoUrl:t.picture}}
}function h(){return{isSignedIn:false,hasGrantedPermissions:false,userProfile:null}
}function j(w,s){this.getCurrentUserState=function(){var x=JSON.parse(localStorage.getItem("googletoken"));
gapi.client.setToken(x);if(!x){return Promise.resolve(h())
}return t(x)["catch"](function(){localStorage.setItem("googletoken",null);
return h()})};function t(x){return fetch("https://www.googleapis.com/oauth2/v3/userinfo?access_token="+x.access_token).then(function(y){if(y.ok){return y.json()
}else{throw g("rejected token")}}).then(function(y){var z=google.accounts.oauth2.hasGrantedAllScopes.apply(null,[x].concat(w.split(" ")));
return n(y,z)})}function u(){return new Promise(function(y,x){var z=google.accounts.oauth2.initTokenClient({client_id:s,scope:w,select_account:true,callback:function(A){if(A.access_token){y(A)
}else{x({errorCode:A.error,message:A.error_description})
}},error_callback:function(A){x({errorCode:A.type,message:A.message})
}});z.requestAccessToken()})}function v(){return u().then(function(x){localStorage.setItem("googletoken",JSON.stringify(x));
gapi.client.setToken(x);return x}).then(function(x){return t(x)
}).then(function(x){if(x.hasGrantedPermissions){return x
}else{throw b({error:"access_denied"})}})}this.signIn=function(){var x=JSON.parse(localStorage.getItem("googletoken"));
if(x==null){return v()}gapi.client.setToken(x);return t(x)["catch"](function(){return v()
})};this.forceSignIn=function(){return v()};this.signOut=function(){localStorage.setItem("googletoken",null);
return Promise.resolve()};this.listMyTeacherCourses=function(){return p({teacherId:"me",courseStates:["ACTIVE"]})
};this.listCourseStudents=function(x){return r({listItems:gapi.client.classroom.courses.students.list,listItemsOptions:{courseId:x},getListFromResult:function(y){return y.students
},compare:function(y,z){return y.profile.name.fullName.localeCompare(z.profile.name.fullName)
}})};this.createCourseWork=function(x,y){return gapi.client.classroom.courses.courseWork.create({courseId:x},y).then(function(z){return z.result
},function(z){throw a(z)})};this.publishCourseWork=function(x,y){return gapi.client.classroom.courses.courseWork.patch({courseId:x,id:y,updateMask:"state"},{state:"PUBLISHED"}).then(function(z){return z.result
},function(z){throw a(z)})};this.listCourseWorkStudentSubmissions=function(x,y){return r({listItems:gapi.client.classroom.courses.courseWork.studentSubmissions.list,listItemsOptions:{courseId:x,courseWorkId:y},getListFromResult:function(z){return z.studentSubmissions
}})};this.getMyCourseWorkStudentSubmission=function(x,y){return r({listItems:gapi.client.classroom.courses.courseWork.studentSubmissions.list,listItemsOptions:{courseId:x,courseWorkId:y,userId:"me"},getListFromResult:function(z){return z.studentSubmissions
}}).then(function(z){return z.length?z[0]:null})};this.turnInStudentSubmission=function(x,y,z){return gapi.client.classroom.courses.courseWork.studentSubmissions.turnIn({courseId:x,courseWorkId:y,id:z}).then(function(A){return A
},function(A){throw a(A)})};this.uploadDraftScores=function(y){var A=gapi.client.newBatch();
if(y){for(var x=0;x<y.length;++x){var z=y[x];A.add(gapi.client.classroom.courses.courseWork.studentSubmissions.patch({courseId:z.courseId,courseWorkId:z.courseWorkId,id:z.id,updateMask:"draftGrade"},{draftGrade:z.draftGrade}))
}}return A}}return{createSetAssignmentClient:f,createDoAssignmentClient:e,createAssignmentResultsClient:c}
})();